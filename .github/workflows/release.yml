name: Release to Master

on:
  workflow_dispatch:

permissions:
  contents: write  # GITHUB_TOKEN에 읽기/쓰기 권한 부여

jobs:
  release-to-master:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master branch
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Set up Git
        id: setup_git
        uses: actions/github-script@v6
        with:
          script: |
            const user = await github.rest.users.getByUsername({ username: context.actor });
            const email = `${context.actor}@users.noreply.github.com`;
            return { userName: user.data.name || context.actor, userEmail: email };

      - name: Configure Git
        run: |
          git config --global user.name "${{ steps.setup_git.outputs.userName }}"
          git config --global user.email "${{ steps.setup_git.outputs.userEmail }}"

      - name: Merge develop to master
        run: |
          git merge origin/develop --allow-unrelated-histories || echo "Merge conflicts detected. Please resolve conflicts manually."
          git push origin master

      - name: Create Release Tag
        id: create_tag
        run: |
          BASE_TAG=$(date +'%y%m%d')
          TAG=$BASE_TAG
          COUNTER=1
          TAG="${BASE_TAG}-${COUNTER}"
          while git rev-parse "refs/tags/$TAG" > /dev/null 2>&1; do
            TAG="${BASE_TAG}-${COUNTER}"
            COUNTER=$((COUNTER+1))
          done
          git tag $TAG
          git push origin $TAG
          echo "::set-output name=tag::$TAG"
  
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: ${{ steps.create_tag.outputs.tag }}
          generateReleaseNotes: true
          makeLatest: true
          draft: false
          prerelease: false
          removeArtifacts: true
